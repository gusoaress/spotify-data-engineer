name: "Terraform Apply"

on:
  pull_request:
    types: [closed]

env:
  TF_CLOUD_ORGANIZATION: "gu-soares-personal-education"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "terraform-automation"
  CONFIG_DIRECTORY: "./infra"
  SPOTIFY_ALBUM_SOURCE: ${{ secrets.SPOTIFY_ALBUM_SOURCE }}
  SPOTIFY_ARTIST_SOURCE: ${{ secrets.SPOTIFY_ARTIST_SOURCE }}
  SPOTIFY_TRACK_SOURCE: ${{ secrets.SPOTIFY_TRACK_SOURCE }}

jobs:
  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Set Terraform Variables
        run: |
          echo "spotify_album_source=${{ env.SPOTIFY_ALBUM_SOURCE }}" >> $GITHUB_ENV
          echo "spotify_artist_source=${{ env.SPOTIFY_ARTIST_SOURCE }}" >> $GITHUB_ENV
          echo "spotify_track_source=${{ env.SPOTIFY_TRACK_SOURCE }}" >> $GITHUB_ENV

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"

      - name: Check Destroy Configuration
        run: |
          destroy=$(yaml get destroy ./config.yml)
          if [ "$destroy" = "true" ]; then
            echo "Destroy is set to true. Running terraform destroy..."
            terraform destroy -auto-approve
          else
            echo "Destroy is set to false. Skipping terraform destroy."
          fi
        working-directory: $GITHUB_WORKSPACE
